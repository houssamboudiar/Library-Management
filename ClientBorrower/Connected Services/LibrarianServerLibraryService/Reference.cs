//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientBorrower.LibrarianServerLibraryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Work", Namespace="http://schemas.datacontract.org/2004/07/IRemoteWCF.Models")]
    [System.SerializableAttribute()]
    public partial class Work : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> WritersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdWork {
            get {
                return this.IdWorkField;
            }
            set {
                if ((this.IdWorkField.Equals(value) != true)) {
                    this.IdWorkField = value;
                    this.RaisePropertyChanged("IdWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Theme {
            get {
                return this.ThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeField, value) != true)) {
                    this.ThemeField = value;
                    this.RaisePropertyChanged("Theme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Writers {
            get {
                return this.WritersField;
            }
            set {
                if ((object.ReferenceEquals(this.WritersField, value) != true)) {
                    this.WritersField = value;
                    this.RaisePropertyChanged("Writers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/IRemoteWCF.Models")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Borrower", Namespace="http://schemas.datacontract.org/2004/07/IRemoteWCF.Models")]
    [System.SerializableAttribute()]
    public partial class Borrower : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientBorrower.LibrarianServerLibraryService.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardID1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientBorrower.LibrarianServerLibraryService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardID1 {
            get {
                return this.CardID1Field;
            }
            set {
                if ((this.CardID1Field.Equals(value) != true)) {
                    this.CardID1Field = value;
                    this.RaisePropertyChanged("CardID1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/IRemoteWCF.Models")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teacher", Namespace="http://schemas.datacontract.org/2004/07/IRemoteWCF.Models")]
    [System.SerializableAttribute()]
    public partial class Teacher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientBorrower.LibrarianServerLibraryService.Borrower BorrowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientBorrower.LibrarianServerLibraryService.Borrower Borrower {
            get {
                return this.BorrowerField;
            }
            set {
                if ((object.ReferenceEquals(this.BorrowerField, value) != true)) {
                    this.BorrowerField = value;
                    this.RaisePropertyChanged("Borrower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibrarianServerLibraryService.ILibrarian")]
    public interface ILibrarian {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/AddWork", ReplyAction="http://tempuri.org/ILibrarian/AddWorkResponse")]
        bool AddWork(System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/AddWork", ReplyAction="http://tempuri.org/ILibrarian/AddWorkResponse")]
        System.Threading.Tasks.Task<bool> AddWorkAsync(System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/EditWork", ReplyAction="http://tempuri.org/ILibrarian/EditWorkResponse")]
        bool EditWork(int idWork, System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/EditWork", ReplyAction="http://tempuri.org/ILibrarian/EditWorkResponse")]
        System.Threading.Tasks.Task<bool> EditWorkAsync(int idWork, System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/DeleteWork", ReplyAction="http://tempuri.org/ILibrarian/DeleteWorkResponse")]
        bool DeleteWork(int idWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/DeleteWork", ReplyAction="http://tempuri.org/ILibrarian/DeleteWorkResponse")]
        System.Threading.Tasks.Task<bool> DeleteWorkAsync(int idWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/ConfirmWork", ReplyAction="http://tempuri.org/ILibrarian/ConfirmWorkResponse")]
        bool ConfirmWork(int idWork, int idBorrower);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/ConfirmWork", ReplyAction="http://tempuri.org/ILibrarian/ConfirmWorkResponse")]
        System.Threading.Tasks.Task<bool> ConfirmWorkAsync(int idWork, int idBorrower);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/returnWork", ReplyAction="http://tempuri.org/ILibrarian/returnWorkResponse")]
        bool returnWork(int idWork, int idBorrower);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/returnWork", ReplyAction="http://tempuri.org/ILibrarian/returnWorkResponse")]
        System.Threading.Tasks.Task<bool> returnWorkAsync(int idWork, int idBorrower);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/reserveWork", ReplyAction="http://tempuri.org/ILibrarian/reserveWorkResponse")]
        bool reserveWork(int idClient, int idWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/reserveWork", ReplyAction="http://tempuri.org/ILibrarian/reserveWorkResponse")]
        System.Threading.Tasks.Task<bool> reserveWorkAsync(int idClient, int idWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllWorks", ReplyAction="http://tempuri.org/ILibrarian/getAllWorksResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getAllWorks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllWorks", ReplyAction="http://tempuri.org/ILibrarian/getAllWorksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getAllWorksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getById", ReplyAction="http://tempuri.org/ILibrarian/getByIdResponse")]
        ClientBorrower.LibrarianServerLibraryService.Work getById(int idWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getById", ReplyAction="http://tempuri.org/ILibrarian/getByIdResponse")]
        System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Work> getByIdAsync(int idWork);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByTitle", ReplyAction="http://tempuri.org/ILibrarian/getByTitleResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByTitle(string titre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByTitle", ReplyAction="http://tempuri.org/ILibrarian/getByTitleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByTitleAsync(string titre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByWriter", ReplyAction="http://tempuri.org/ILibrarian/getByWriterResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByWriter(string writer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByWriter", ReplyAction="http://tempuri.org/ILibrarian/getByWriterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByWriterAsync(string writer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByTags", ReplyAction="http://tempuri.org/ILibrarian/getByTagsResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByTags(string mot_cle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByTags", ReplyAction="http://tempuri.org/ILibrarian/getByTagsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByTagsAsync(string mot_cle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByTheme", ReplyAction="http://tempuri.org/ILibrarian/getByThemeResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByTheme(string theme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getByTheme", ReplyAction="http://tempuri.org/ILibrarian/getByThemeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByThemeAsync(string theme);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/addUserStudent", ReplyAction="http://tempuri.org/ILibrarian/addUserStudentResponse")]
        bool addUserStudent(string UserName, string passWord, int id, string nom, string prenom, string specialty, string niv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/addUserStudent", ReplyAction="http://tempuri.org/ILibrarian/addUserStudentResponse")]
        System.Threading.Tasks.Task<bool> addUserStudentAsync(string UserName, string passWord, int id, string nom, string prenom, string specialty, string niv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/addUserTeacher", ReplyAction="http://tempuri.org/ILibrarian/addUserTeacherResponse")]
        bool addUserTeacher(string UserName, string passWord, int id, string nom, string prenom, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/addUserTeacher", ReplyAction="http://tempuri.org/ILibrarian/addUserTeacherResponse")]
        System.Threading.Tasks.Task<bool> addUserTeacherAsync(string UserName, string passWord, int id, string nom, string prenom, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/authenticateUser", ReplyAction="http://tempuri.org/ILibrarian/authenticateUserResponse")]
        bool authenticateUser(string userName, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/authenticateUser", ReplyAction="http://tempuri.org/ILibrarian/authenticateUserResponse")]
        System.Threading.Tasks.Task<bool> authenticateUserAsync(string userName, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllUsers", ReplyAction="http://tempuri.org/ILibrarian/getAllUsersResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Account> getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllUsers", ReplyAction="http://tempuri.org/ILibrarian/getAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Account>> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getUser", ReplyAction="http://tempuri.org/ILibrarian/getUserResponse")]
        ClientBorrower.LibrarianServerLibraryService.Account getUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getUser", ReplyAction="http://tempuri.org/ILibrarian/getUserResponse")]
        System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Account> getUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllBorrowers", ReplyAction="http://tempuri.org/ILibrarian/getAllBorrowersResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Borrower> getAllBorrowers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllBorrowers", ReplyAction="http://tempuri.org/ILibrarian/getAllBorrowersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Borrower>> getAllBorrowersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getBorrower", ReplyAction="http://tempuri.org/ILibrarian/getBorrowerResponse")]
        ClientBorrower.LibrarianServerLibraryService.Borrower getBorrower(int IdCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getBorrower", ReplyAction="http://tempuri.org/ILibrarian/getBorrowerResponse")]
        System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Borrower> getBorrowerAsync(int IdCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllStudents", ReplyAction="http://tempuri.org/ILibrarian/getAllStudentsResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Student> getAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllStudents", ReplyAction="http://tempuri.org/ILibrarian/getAllStudentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Student>> getAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getStudent", ReplyAction="http://tempuri.org/ILibrarian/getStudentResponse")]
        ClientBorrower.LibrarianServerLibraryService.Student getStudent(int IdCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getStudent", ReplyAction="http://tempuri.org/ILibrarian/getStudentResponse")]
        System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Student> getStudentAsync(int IdCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllTeachers", ReplyAction="http://tempuri.org/ILibrarian/getAllTeachersResponse")]
        System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Teacher> getAllTeachers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getAllTeachers", ReplyAction="http://tempuri.org/ILibrarian/getAllTeachersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Teacher>> getAllTeachersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getTeacher", ReplyAction="http://tempuri.org/ILibrarian/getTeacherResponse")]
        ClientBorrower.LibrarianServerLibraryService.Teacher getTeacher(int IdCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/getTeacher", ReplyAction="http://tempuri.org/ILibrarian/getTeacherResponse")]
        System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Teacher> getTeacherAsync(int IdCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/modifyUserStudent", ReplyAction="http://tempuri.org/ILibrarian/modifyUserStudentResponse")]
        bool modifyUserStudent(string UserName, string passWord, int CardID, string nom, string prenom, string specialty, string Niveau);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/modifyUserStudent", ReplyAction="http://tempuri.org/ILibrarian/modifyUserStudentResponse")]
        System.Threading.Tasks.Task<bool> modifyUserStudentAsync(string UserName, string passWord, int CardID, string nom, string prenom, string specialty, string Niveau);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/modifyUserTeacher", ReplyAction="http://tempuri.org/ILibrarian/modifyUserTeacherResponse")]
        bool modifyUserTeacher(string UserName, string passWord, int CardID, string nom, string prenom, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/modifyUserTeacher", ReplyAction="http://tempuri.org/ILibrarian/modifyUserTeacherResponse")]
        System.Threading.Tasks.Task<bool> modifyUserTeacherAsync(string UserName, string passWord, int CardID, string nom, string prenom, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/signout", ReplyAction="http://tempuri.org/ILibrarian/signoutResponse")]
        bool signout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibrarian/signout", ReplyAction="http://tempuri.org/ILibrarian/signoutResponse")]
        System.Threading.Tasks.Task<bool> signoutAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibrarianChannel : ClientBorrower.LibrarianServerLibraryService.ILibrarian, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibrarianClient : System.ServiceModel.ClientBase<ClientBorrower.LibrarianServerLibraryService.ILibrarian>, ClientBorrower.LibrarianServerLibraryService.ILibrarian {
        
        public LibrarianClient() {
        }
        
        public LibrarianClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibrarianClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibrarianClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibrarianClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddWork(System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type) {
            return base.Channel.AddWork(tags, writers, title, theme, type);
        }
        
        public System.Threading.Tasks.Task<bool> AddWorkAsync(System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type) {
            return base.Channel.AddWorkAsync(tags, writers, title, theme, type);
        }
        
        public bool EditWork(int idWork, System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type) {
            return base.Channel.EditWork(idWork, tags, writers, title, theme, type);
        }
        
        public System.Threading.Tasks.Task<bool> EditWorkAsync(int idWork, System.Collections.Generic.List<string> tags, System.Collections.Generic.List<string> writers, string title, string theme, string type) {
            return base.Channel.EditWorkAsync(idWork, tags, writers, title, theme, type);
        }
        
        public bool DeleteWork(int idWork) {
            return base.Channel.DeleteWork(idWork);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWorkAsync(int idWork) {
            return base.Channel.DeleteWorkAsync(idWork);
        }
        
        public bool ConfirmWork(int idWork, int idBorrower) {
            return base.Channel.ConfirmWork(idWork, idBorrower);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmWorkAsync(int idWork, int idBorrower) {
            return base.Channel.ConfirmWorkAsync(idWork, idBorrower);
        }
        
        public bool returnWork(int idWork, int idBorrower) {
            return base.Channel.returnWork(idWork, idBorrower);
        }
        
        public System.Threading.Tasks.Task<bool> returnWorkAsync(int idWork, int idBorrower) {
            return base.Channel.returnWorkAsync(idWork, idBorrower);
        }
        
        public bool reserveWork(int idClient, int idWork) {
            return base.Channel.reserveWork(idClient, idWork);
        }
        
        public System.Threading.Tasks.Task<bool> reserveWorkAsync(int idClient, int idWork) {
            return base.Channel.reserveWorkAsync(idClient, idWork);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getAllWorks() {
            return base.Channel.getAllWorks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getAllWorksAsync() {
            return base.Channel.getAllWorksAsync();
        }
        
        public ClientBorrower.LibrarianServerLibraryService.Work getById(int idWork) {
            return base.Channel.getById(idWork);
        }
        
        public System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Work> getByIdAsync(int idWork) {
            return base.Channel.getByIdAsync(idWork);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByTitle(string titre) {
            return base.Channel.getByTitle(titre);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByTitleAsync(string titre) {
            return base.Channel.getByTitleAsync(titre);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByWriter(string writer) {
            return base.Channel.getByWriter(writer);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByWriterAsync(string writer) {
            return base.Channel.getByWriterAsync(writer);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByTags(string mot_cle) {
            return base.Channel.getByTags(mot_cle);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByTagsAsync(string mot_cle) {
            return base.Channel.getByTagsAsync(mot_cle);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work> getByTheme(string theme) {
            return base.Channel.getByTheme(theme);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Work>> getByThemeAsync(string theme) {
            return base.Channel.getByThemeAsync(theme);
        }
        
        public bool addUserStudent(string UserName, string passWord, int id, string nom, string prenom, string specialty, string niv) {
            return base.Channel.addUserStudent(UserName, passWord, id, nom, prenom, specialty, niv);
        }
        
        public System.Threading.Tasks.Task<bool> addUserStudentAsync(string UserName, string passWord, int id, string nom, string prenom, string specialty, string niv) {
            return base.Channel.addUserStudentAsync(UserName, passWord, id, nom, prenom, specialty, niv);
        }
        
        public bool addUserTeacher(string UserName, string passWord, int id, string nom, string prenom, string grade) {
            return base.Channel.addUserTeacher(UserName, passWord, id, nom, prenom, grade);
        }
        
        public System.Threading.Tasks.Task<bool> addUserTeacherAsync(string UserName, string passWord, int id, string nom, string prenom, string grade) {
            return base.Channel.addUserTeacherAsync(UserName, passWord, id, nom, prenom, grade);
        }
        
        public bool authenticateUser(string userName, string passWord) {
            return base.Channel.authenticateUser(userName, passWord);
        }
        
        public System.Threading.Tasks.Task<bool> authenticateUserAsync(string userName, string passWord) {
            return base.Channel.authenticateUserAsync(userName, passWord);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Account> getAllUsers() {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Account>> getAllUsersAsync() {
            return base.Channel.getAllUsersAsync();
        }
        
        public ClientBorrower.LibrarianServerLibraryService.Account getUser(string username) {
            return base.Channel.getUser(username);
        }
        
        public System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Account> getUserAsync(string username) {
            return base.Channel.getUserAsync(username);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Borrower> getAllBorrowers() {
            return base.Channel.getAllBorrowers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Borrower>> getAllBorrowersAsync() {
            return base.Channel.getAllBorrowersAsync();
        }
        
        public ClientBorrower.LibrarianServerLibraryService.Borrower getBorrower(int IdCard) {
            return base.Channel.getBorrower(IdCard);
        }
        
        public System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Borrower> getBorrowerAsync(int IdCard) {
            return base.Channel.getBorrowerAsync(IdCard);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Student> getAllStudents() {
            return base.Channel.getAllStudents();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Student>> getAllStudentsAsync() {
            return base.Channel.getAllStudentsAsync();
        }
        
        public ClientBorrower.LibrarianServerLibraryService.Student getStudent(int IdCard) {
            return base.Channel.getStudent(IdCard);
        }
        
        public System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Student> getStudentAsync(int IdCard) {
            return base.Channel.getStudentAsync(IdCard);
        }
        
        public System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Teacher> getAllTeachers() {
            return base.Channel.getAllTeachers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientBorrower.LibrarianServerLibraryService.Teacher>> getAllTeachersAsync() {
            return base.Channel.getAllTeachersAsync();
        }
        
        public ClientBorrower.LibrarianServerLibraryService.Teacher getTeacher(int IdCard) {
            return base.Channel.getTeacher(IdCard);
        }
        
        public System.Threading.Tasks.Task<ClientBorrower.LibrarianServerLibraryService.Teacher> getTeacherAsync(int IdCard) {
            return base.Channel.getTeacherAsync(IdCard);
        }
        
        public bool modifyUserStudent(string UserName, string passWord, int CardID, string nom, string prenom, string specialty, string Niveau) {
            return base.Channel.modifyUserStudent(UserName, passWord, CardID, nom, prenom, specialty, Niveau);
        }
        
        public System.Threading.Tasks.Task<bool> modifyUserStudentAsync(string UserName, string passWord, int CardID, string nom, string prenom, string specialty, string Niveau) {
            return base.Channel.modifyUserStudentAsync(UserName, passWord, CardID, nom, prenom, specialty, Niveau);
        }
        
        public bool modifyUserTeacher(string UserName, string passWord, int CardID, string nom, string prenom, string grade) {
            return base.Channel.modifyUserTeacher(UserName, passWord, CardID, nom, prenom, grade);
        }
        
        public System.Threading.Tasks.Task<bool> modifyUserTeacherAsync(string UserName, string passWord, int CardID, string nom, string prenom, string grade) {
            return base.Channel.modifyUserTeacherAsync(UserName, passWord, CardID, nom, prenom, grade);
        }
        
        public bool signout() {
            return base.Channel.signout();
        }
        
        public System.Threading.Tasks.Task<bool> signoutAsync() {
            return base.Channel.signoutAsync();
        }
    }
}
